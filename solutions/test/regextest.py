import regex
import unittest


class RegexTest(unittest.TestCase):

    def test_regex(self):
        self.assertEqual(regex.check(r'abcde', 'abcde'), True)
        self.assertEqual(regex.check(r'abcde', 'abcdf'), False)
        self.assertEqual(regex.check(r'abcde?', 'abcde'), True)
        self.assertEqual(regex.check(r'abcde?', 'abcd'), True)
        self.assertEqual(regex.check(r'abcde+', 'abcde'), True)
        self.assertEqual(regex.check(r'abcde+', 'abcd'), False)
        self.assertEqual(regex.check(r'abcde+', 'abcdf'), False)
        self.assertEqual(regex.check(r'abcde*', 'abcde'), True)
        self.assertEqual(regex.check(r'abcde*', 'abcd'), True)
        self.assertEqual(regex.check(r'abcde{2}', 'abcde'), False)
        self.assertEqual(regex.check(r'abcde{2}', 'abcdee'), True)
        self.assertEqual(regex.check(r'abcde{1,3}', 'abcdeee'), True)
        self.assertEqual(regex.check(r'abcde{1,3}', 'abcd'), False)
        self.assertEqual(regex.check(r'abcde+?', 'abcdee'), True)
        self.assertEqual(regex.check(r'abcde+?', 'abcd'), False)
        self.assertEqual(regex.check(r'abcde*?', 'abcd'), True)
        self.assertEqual(regex.check(r'abcde*?', 'abcde'), True)
        self.assertEqual(regex.check(r'\d', '1'), True)
        self.assertEqual(regex.check(r'\d', 'a'), False)
        self.assertEqual(regex.check(r'\D', '1'), False)
        self.assertEqual(regex.check(r'\D', 'a'), True)
        self.assertEqual(regex.check(r'\w+', 'aB9_'), True)
        self.assertEqual(regex.check(r'\w+', '.'), False)
        self.assertEqual(regex.check(r'\W+', '. '), True)
        self.assertEqual(regex.check(r'\s+', '    '), True)
        self.assertEqual(regex.check(r'.+', 'abcd0123_'), True)
        self.assertEqual(regex.check(r'a(bcd)?e', 'ae'), True)
        self.assertEqual(regex.check(r'a(bcd)?e', 'abcde'), True)
        self.assertEqual(regex.check(r'a(bcd)+e', 'ae'), False)
        self.assertEqual(regex.check(r'a(bcd)+e', 'abcde'), True)
        self.assertEqual(regex.check(r'a(bcd)+e', 'abcdbcde'), True)
        self.assertEqual(regex.check(r'a(bcd\d)*e', 'ae'), True)
        self.assertEqual(regex.check(r'a(bcd\d)*e', 'abcde'), False)
        self.assertEqual(regex.check(r'a(bcd\d)*e', 'abcd0e'), True)
        self.assertEqual(regex.check(r'^abcde', 'abcdef'), True)
        self.assertEqual(regex.check(r'^abcde$', 'abcdef'), False)
        self.assertEqual(regex.check(r'(^abcd)*e$', 'e'), True)
        self.assertEqual(regex.check(r'a[bc]de', 'ade'), False)
        self.assertEqual(regex.check(r'a[bc]de', 'acde'), True)
        self.assertEqual(regex.check(r'a[bc]de', 'acde'), True)
        self.assertEqual(regex.check(r'a[bc]?de', 'acde'), True)
        self.assertEqual(regex.check(r'a[bc]?de', 'ade'), True)
        self.assertEqual(regex.check(r'a[\d]*?\d*de', 'a234de'), True)
        self.assertEqual(regex.check(r'a[^\d]cde', 'abcde'), True)
        self.assertEqual(regex.check(r'a[^\D]cde', 'abcde'), False)
        self.assertEqual(regex.check(r'a[^\w\s]cde', 'abcde'), False)
        self.assertEqual(regex.check(r'a[^\w\s]+cde', 'a..cde'), True)
        self.assertEqual(regex.check(r'a[a-d]cde', 'abcde'), True)
        self.assertEqual(regex.check(r'a[a-d]cde', 'aecde'), False)
        self.assertEqual(regex.check(r'a[a-d0-9]cde', 'a6cde'), True)
        self.assertEqual(regex.check(r'a([\w])+cde', 'abcde'), True)
        self.assertEqual(regex.check(r'a([\w])+cde', 'a1234cde'), True)
        self.assertEqual(regex.check(r'a[b]*cd[e]*f', 'acdf'), True)
        self.assertEqual(regex.check(r'a[b]*cd[e]*f', 'abcdeeeef'), True)
        self.assertEqual(regex.check(r'a[a-z0-9]+', 'aAbcd12'), False)
        self.assertEqual(regex.check(r'abcde', 'bbabcde'), True)
        self.assertEqual(regex.check(r'[abc]{2,3}', 'a'), False)
        self.assertEqual(regex.check(r'[abc]{2,3}', 'bc'), True)
        self.assertEqual(regex.check(r'a\d?\w+\s*e', 'abcde'), True)
        self.assertEqual(regex.check("^a[b-k]{2}$", "abcde"), False)
        self.assertEqual(regex.check(r'.*', 'ab12 _'), True)
        self.assertEqual(regex.check(r'.*', ''), True)
        self.assertEqual(regex.check(r'.+', 'ab12 _'), True)
        self.assertEqual(regex.check(r'.+', ''), False)
        self.assertEqual(regex.check(r'\d+', 'abcde'), False)
        self.assertEqual(regex.check(r'abc\sde', 'abc de'), True)
        self.assertEqual(regex.check(r'abs\Sde', 'abc de'), False)
        self.assertEqual(regex.check(r'a{2}bcd', 'aabcd'), True)
        self.assertEqual(regex.check(r'a{2,3}bcd', 'abcd'), False)
        self.assertEqual(regex.check(r'a{2,3}bcd', 'aabcd'), True)
        self.assertEqual(regex.check(r'a{2,3}bcd', 'aaabcd'), True)
        self.assertEqual(regex.check(r'^a{2,3}bcd', 'aaaabcd'), False)
        self.assertEqual(regex.check(r'a{2,3}bcd', 'aaaabcd'), True)


if __name__ == '__main__':
    unittest.main()
